syntax = "proto3";

package user;

import "google/api/annotations.proto";

option go_package = "github.com/KaminurOrynbek/BiznesAsh/UserService/auto-proto";

service UserService {
  rpc Register(RegisterRequest) returns (RegisterResponse) {
    option (google.api.http) = {
      post: "/v1/users/register"
      body: "*"
    };
  }

  rpc Login(LoginRequest) returns (LoginResponse) {
    option (google.api.http) = {
      post: "/v1/users/login"
      body: "*"
    };
  }

  rpc Authorize(TokenRequest) returns (AuthorizationResponse) {
    option (google.api.http) = {
      post: "/v1/users/authorize"
      body: "*"
    };
  }

  rpc GetCurrentUser(Empty) returns (UserResponse) {
    option (google.api.http) = {
      get: "/v1/users/me"
    };
  }

  rpc GetUser(GetUserRequest) returns (UserResponse) {
    option (google.api.http) = {
      get: "/v1/users/{userId}"
    };
  }

  rpc UpdateProfile(UpdateProfileRequest) returns (UserResponse) {
    option (google.api.http) = {
      put: "/v1/users/profile"
      body: "*"
    };
  }

  rpc PromoteToModerator(RoleChangeRequest) returns (RoleChangeResponse) {
    option (google.api.http) = {
      post: "/v1/users/{userId}/promote/moderator"
    };
  }

  rpc PromoteToAdmin(RoleChangeRequest) returns (RoleChangeResponse) {
    option (google.api.http) = {
      post: "/v1/users/{userId}/promote/admin"
    };
  }

  rpc DemoteToUser(RoleChangeRequest) returns (RoleChangeResponse) {
    option (google.api.http) = {
      post: "/v1/users/{userId}/demote"
    };
  }

  rpc DeleteAccount(UserID) returns (DeleteResponse) {
    option (google.api.http) = {
      delete: "/v1/users/{userId}"
    };
  }

  rpc ListUsers(ListUsersRequest) returns (UsersListResponse) {
    option (google.api.http) = {
      get: "/v1/users"
    };
  }

  rpc BanUser(UserID) returns (BanUserResponse) {
    option (google.api.http) = {
      post: "/v1/users/{userId}/ban"
    };
  }
}

// Messages

message RegisterRequest {
  string email = 1;
  string username = 2;
  string password = 3;
}

message RegisterResponse {
  string userId = 1;
  string username = 2;
  string email = 3;
  string role = 4;
  string token = 5;
}

message LoginRequest {
  string email = 1;
  string password = 2;
}

message TokenRequest {
  string token = 1;
}

message UpdateProfileRequest {
  string username = 1;
  string bio = 2;
}

message GetUserRequest {
  string userId = 1;
}

message UserID {
  string userId = 1;
}

message ListUsersRequest {
  string searchQuery = 1;
}

message UserResponse {
  string userId = 1;
  string email = 2;
  string username = 3;
  string role = 4;
  string bio = 5;
}

message UsersListResponse {
  repeated UserResponse users = 1;
}

message LoginResponse {
  string userId = 1;
  string token = 2;
}

message AuthorizationResponse {
  bool success = 1;
  string message = 2;
  string user_id = 3;
}

message RoleChangeRequest {
  string userId = 1;
}

message RoleChangeResponse {
  bool success = 1;
  string message = 2;
}

message DeleteResponse {
  bool success = 1;
  string message = 2;
}

message BanUserResponse {
  bool success = 1;
  string message = 2;
}

message Empty {}
